int inches = 0;			//odleglosc w calach
int cm = 0;			//odleglosc w cm
int odleglosc = 0 ;		//odleglosc calkowita
int pozycja = 0;		//pozycja obiektu
int MAXpredkosc = 0;		//predkosc maksymalna
int MINpredkosc = 0;		//predkosc minimalna
int predkosc = 0;

long readUltrasonicDistance(int triggerPin, int echoPin)
{
  pinMode(triggerPin, OUTPUT);  	// Clear the trigger
  digitalWrite(triggerPin, LOW);	
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  return pulseIn(echoPin, HIGH);
}

void setup()
{
  
  pinMode(8, OUTPUT);		//wyjscie dla sygnalu PWM
  digitalWrite(8, HIGH);	//aktywnosc silnika jest ciagla
  pinMode(9, OUTPUT);		//wyjscie dla zasilania PRZÓD
  pinMode(10, OUTPUT);		//wyjscie dla zasilania TYŁ
  Serial.begin(9600);

}

void loop()
{
  // Pomiar odleglosci przez CZUJNIK
  cm = 0.01723 * readUltrasonicDistance(7, 7);
  // convert to inches by dividing by 2.54
  inches = (cm / 2.54);
  
  //Przedstawianie wynikow odleglosci
  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.print("cm, ");	//wartosc w centymetrach
  delay(100); // Wait for 100 millisecond(s)
  
  //Pozycjonowanie i regulacja
  odleglosc = cm - pozycja;
  Serial.print(odleglosc);
  Serial.println(" to odleglosc.");
  if(odleglosc > 0)
  {
    //zmiana prędkości dla wartości dodatnich (jazda na przód)
    
    if(odleglosc > 100)
    {
      pozycja += 20;  
      predkosc = MAXpredkosc;					//predkość maksymalna
    }
    else if(odleglosc < 20)
    {
      pozycja += 1;
      predkosc = MINpredkosc;					//prędkość minimalna
    }
    else
    {
      pozycja += 20*(predkosc/260);
      predkosc = MINpredkosc + (MINpredkosc * odleglosc);	//prędkość w zależności od odległości
    }
	
    analogWrite(8, predkosc); 					//Prędkość obrotów (silnik działa w przedziale od 130 do 260)
    digitalWrite(9, HIGH);					//jazda silnikiem do przodu
    digitalWrite(10, LOW);
    
  }
  else if(odleglosc < 0)
  {
        
    //zmiana prędkości dla wartości ujemnych (cofanie)
    
    if(odleglosc < -100)
    {
      pozycja -= 20;  
      predkosc = -MAXpredkosc;					//predkość maksymalna
    }
    else if(odleglosc > -20)
    {
      pozycja -= 1;
      predkosc = -MINpredkosc;					//prędkość minimalna
    }
    else
    {
      pozycja -= 20*(-predkosc/260);
      predkosc = -MINpredkosc + (MINpredkosc * odleglosc);	//prędkość w zależności od odległości
    }
	
    analogWrite(8, predkosc); 					//Prędkość obrotów (silnik działa w przedziale od 130 do 260)
    digitalWrite(9, LOW);					//jazda silnikiem do tyłu
    digitalWrite(10, HIGH);
        
  }
  else
  {
    Serial.println("Na miejscu!");
    digitalWrite(9, LOW);
    digitalWrite(10, LOW);
  }
  
}
